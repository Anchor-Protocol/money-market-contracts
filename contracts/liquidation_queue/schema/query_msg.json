{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "liquidation_amount"
      ],
      "properties": {
        "liquidation_amount": {
          "type": "object",
          "required": [
            "borrow_amount",
            "borrow_limit",
            "collateral_prices",
            "collaterals"
          ],
          "properties": {
            "borrow_amount": {
              "$ref": "#/definitions/Uint256"
            },
            "borrow_limit": {
              "$ref": "#/definitions/Uint256"
            },
            "collateral_prices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Decimal256"
              }
            },
            "collaterals": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/definitions/Uint256"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "collateral_info"
      ],
      "properties": {
        "collateral_info": {
          "type": "object",
          "required": [
            "collateral_token"
          ],
          "properties": {
            "collateral_token": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "bid"
      ],
      "properties": {
        "bid": {
          "type": "object",
          "required": [
            "bid_idx"
          ],
          "properties": {
            "bid_idx": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "bids_by_user"
      ],
      "properties": {
        "bids_by_user": {
          "type": "object",
          "required": [
            "bidder",
            "collateral_token"
          ],
          "properties": {
            "bidder": {
              "type": "string"
            },
            "collateral_token": {
              "type": "string"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "bid_pool"
      ],
      "properties": {
        "bid_pool": {
          "type": "object",
          "required": [
            "bid_slot",
            "collateral_token"
          ],
          "properties": {
            "bid_slot": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "collateral_token": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "bid_pools_by_collateral"
      ],
      "properties": {
        "bid_pools_by_collateral": {
          "type": "object",
          "required": [
            "collateral_token"
          ],
          "properties": {
            "collateral_token": {
              "type": "string"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    }
  }
}
