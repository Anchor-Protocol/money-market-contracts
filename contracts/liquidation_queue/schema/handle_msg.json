{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "bid_fee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "liquidation_threshold": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "oracle_contract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            },
            "owner": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            },
            "price_timeframe": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "safe_ratio": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "stable_denom": {
              "type": [
                "string",
                "null"
              ]
            },
            "waiting_period": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "Owner operation to whitelist a new collateral",
      "type": "object",
      "required": [
        "whitelist_collateral"
      ],
      "properties": {
        "whitelist_collateral": {
          "type": "object",
          "required": [
            "bid_threshold",
            "collateral_token",
            "max_slot",
            "premium_rate_per_slot"
          ],
          "properties": {
            "bid_threshold": {
              "$ref": "#/definitions/Uint256"
            },
            "collateral_token": {
              "$ref": "#/definitions/HumanAddr"
            },
            "max_slot": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "premium_rate_per_slot": {
              "$ref": "#/definitions/Decimal256"
            }
          }
        }
      }
    },
    {
      "description": "Submit a new bid to a bid pool",
      "type": "object",
      "required": [
        "submit_bid"
      ],
      "properties": {
        "submit_bid": {
          "type": "object",
          "required": [
            "collateral_token",
            "premium_slot"
          ],
          "properties": {
            "collateral_token": {
              "$ref": "#/definitions/HumanAddr"
            },
            "premium_slot": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "Withdraw a bid",
      "type": "object",
      "required": [
        "retract_bid"
      ],
      "properties": {
        "retract_bid": {
          "type": "object",
          "required": [
            "bid_idx"
          ],
          "properties": {
            "amount": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "bid_idx": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      }
    },
    {
      "description": "After waiting_period expires, user can activate the bid",
      "type": "object",
      "required": [
        "activate_bids"
      ],
      "properties": {
        "activate_bids": {
          "type": "object",
          "required": [
            "collateral_token"
          ],
          "properties": {
            "bids_idx": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "collateral_token": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "Claim the corresponding amount of liquidated collateral",
      "type": "object",
      "required": [
        "claim_liquidations"
      ],
      "properties": {
        "claim_liquidations": {
          "type": "object",
          "required": [
            "collateral_token"
          ],
          "properties": {
            "bids_idx": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "collateral_token": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg",
      "type": "object",
      "required": [
        "amount",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/HumanAddr"
        }
      }
    },
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "HumanAddr": {
      "type": "string"
    },
    "Uint128": {
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    }
  }
}
